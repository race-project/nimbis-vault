# add extra dependant packages for Aladdin installation
- name: Adding Node.js repository
  shell: |
    curl -sL https://rpm.nodesource.com/setup_10.x | sudo -E bash -

- name: Install Dependant Packages for Aladdin
  yum:
    name:
      - gcc-c++
      - make
      - nodejs
    state: installed

- name: Check for supervisord installation
  stat: path=/etc/supervisord.conf
  changed_when: false
  register: supervisord_install

- name: Install Supervisor Package for IPFS
  when: not supervisord_install.stat.exists
  yum:
    name:
      - supervisor
    state: installed

- name: Check for Node.js installation
  stat: path=/usr/lib/node-v8.11.4-linux-x64
  changed_when: false
  register: nodejs_install

- name: Install Node.js 8.11.4
  when: not nodejs_install.stat.exists
  shell: |
    ln -s /usr/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js /usr/bin/node-gyp
    mv /usr/bin/node /usr/bin/node@10.16.0
    tar -xvf {{ ansible_env.ANSIBLE_INSTALL_SOURCE_DIR }}/node-v8.11.4-linux-x64.tar.gz -C /usr/lib/
    ln -s /usr/lib/node-v8.11.4-linux-x64/bin/node /usr/bin/node

- name: Check for Aladdin installation
  stat: path=/usr/lib/aladdin-vault-api
  changed_when: false
  register: aladdin_install

- name: Install Aladdin (1/3)
  when: not aladdin_install.stat.exists
  shell: |
    cd /usr/lib/aladdin
    npm config set user 0
    npm config set unsafe-perm true
    npm install --save sqlite3
    npm install --save '@warren-bank/ethereumjs-tx-unsign'
    cd /usr/lib/aladdin/node_modules/scrypt
    node-gyp rebuild --tarball={{ ansible_env.ANSIBLE_INSTALL_SOURCE_DIR }}/node-v8.11.4-headers.tar.gz
    setsebool -P httpd_can_network_connect 1
    systemctl restart nginx
    cd /usr/lib
    chown -R root:root aladdin
    chmod -R 775 aladdin
    cd /usr/lib/aladdin
    mv /usr/bin/node /usr/bin/node@8.11.4
    mv /usr/bin/node@10.16.0 /usr/bin/node
    tar -xvf {{ ansible_env.ANSIBLE_INSTALL_SOURCE_DIR }}/aladdin-vault-api.tar.gz -C /usr/lib/
    cd /usr/lib/aladdin-vault-api
    npm install
    cp config/default.json config/local.json
    tar -xvf {{ ansible_env.ANSIBLE_INSTALL_SOURCE_DIR }}/angular-craft-vault.tar.gz -C /tmp
    cp -r /tmp/angular-craft-vault/dist/angular-craft-vault/* /usr/share/nginx/html/
    rm -rf /tmp/angular-craft-vault

- name: append to supervisord configuration file
  blockinfile:
    path: /etc/supervisord.conf
    block: "{{ lookup('file', 'files/etc/supervisord.conf') }}"

- name: Install Aladdin (2/3)
  when: not aladdin_install.stat.exists
  shell: |
    systemctl enable supervisord
    systemctl restart supervisord
    tar -xvf {{ ansible_env.ANSIBLE_INSTALL_SOURCE_DIR }}/aladdin-vault-cli.tar.gz -C /usr/lib/
    cd /usr/lib/aladdin-vault-cli
    npm install

- name: copy aladdin client configuration file
  copy:
    src: files/aladdin_cli/.config.json
    dest: /usr/lib/aladdin-vault-cli/.config.json
    owner: root
    group: root

- name: Copy utilities
  copy:
    src: files/aladdin_cli/unlock.js
    dest: /usr/lib/aladdin-vault-api/utils/unlock.js
    owner: root
    group: root

- name: Install Aladdin (3/3)
  when: not aladdin_install.stat.exists
  shell: |
    chown -R root:root /usr/lib/aladdin-vault-cli/
    chmod -R 775 /usr/lib/aladdin-vault-cli/
    ln -s /usr/lib/aladdin-vault-cli/bin/aladdin /usr/bin/aladdin
    mkdir /ipfs
    chmod 777 /ipfs


- name: Copy Aladdin CLI initial setup script into /root
  copy:
    src: files/root/aladdin_initial_setup.sh
    dest: /root/aladdin_initial_setup.sh
    owner: root
    group: root
    mode: u+x

- name: Copy aladdin-initial-setup.service file into /etc/systemd/system/
  copy:
    src: files/etc/systemd/aladdin-initial-setup.service
    dest: /etc/systemd/system/aladdin-initial-setup.service
    owner: root
    group: root

- name: Enable aladdin-initial-setup service
  systemd:
    name: aladdin-initial-setup.service
    enabled: yes
    daemon_reload: yes

